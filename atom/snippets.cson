'*':
  sign:
    'prefix': '['
    'body': "[t9md]$1"
  vmplink:
    prefix: 'vmplink'
    body: "[vim-mode-plus](https://atom.io/packages/vim-mode-plus)"
'.source.gfm':
  'code':
    'prefix': 'cafe'
    'body': """
    ```coffeescript
    $1
    ```
    """
'.source.js':
  'console log':
    prefix: 'cl'
    body: 'console.log '
'.source.coffee':
  'console log':
    prefix: 'l'
    body: 'console.log '
  'TODO#704':
    prefix: 't'
    body: '# TODO#704 '
  'NOTE#704':
    prefix: 'n'
    body: '# NOTE#704 '
  'Undescore Plus':
    prefix: '_'
    body: '_ = require \'underscore-plus\''
  vmp:
    prefix: 'vmp'
    body: "vim-mode-plus"
  incompatibile:
    prefix: 'inc'
    body: "incompatible-with-pure-vim"
  assert:
    prefix: 'ass'
    body: """
      atom.assert(false, "${1:msg} should not be called.")
      """
  p:
    prefix: 'p'
    body: """
    {inspect} = require 'util'
    p = (args...) -> console.log inspect(args...)\n
    """
  i:
    prefix: 'i'
    body: "{inspect} = require 'util'\n"
  li:
    prefix: 'li'
    body: "console.log inspect(${1:msg})\n"
  d:
    prefix: 'd'
    body: 'debug "${1:hello}"'
  debug:
    prefix: 'dbg'
    body: """
    {debug} = require '../lib/utils'
    settings = require '../lib/settings'
    settings.set('debug', true)
    settings.set('debugOutput', "file")
    settings.set('debugOutputFilePath', "~/github/atom-vim-mode-plus/debug.log")
    debug editor.getText()
    """
  dev:
    prefix: 'dev'
    body: """
    fun = (arg) ->
      editor = atom.workspace.getActiveTextEditor()
      editorElement = editor.element
      cursor = editor.getLastCursor()
      cursorPosition = cursor.getBufferPosition()
      selection = editor.getLastSelection()
      # do something

    disposable?.dispose()
    disposable = atom.commands.add 'atom-workspace',
      'check-up': -> fun('up')
      'check-down': -> fun('down')
      'check-right': -> fun('right')
      'check-left': -> fun('left')
    """
  cursor:
    prefix: 'c'
    body: 'cursor'
  selection:
    prefix: 's'
    body: 'selection'
  ensure:
    prefix: 'e'
    body: "ensure '$1', text: '$2' cursor: [${3:0}, ${4:0}]$5"
  'class':
    prefix: 'cla'
    body: """
    class Base
      constructor: (args) ->

    class C1 extends Base
      constructor: (args) ->

    class C2 extends C1
      constructor: (args) ->
    """
  require:
    prefix: 'r'
    body: '${1:sys} $3= require \'${2:${1:sys}}\'$4'
'.source.json':
  keywords:
    prefix: 'key'
    body: """
      "keywords": [
        "codeshare"
      ],
    """
  activationCommands:
    prefix: 'act'
    body: """
      "activationCommands": {
        "atom-workspace": [
          "some:command"
        ]
      },
    """
